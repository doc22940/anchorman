
settings:
    # settings for the replacment process

    # see wich elements applied into the text at the end
    # return_applied_links: True

    # sort_by_item_value:
    #     key: score
    #     default: 0

    # How many items will be marked at all in the text, default all.
    replaces_at_all: null

    # Input term has to be exact match in text.
    case_sensitive: true

    # default is t and text and number_of_items could be null
    text_unit:
        items_per_unit: null # | 5
        key: p
        name: html-paragraph
        # key: t
        # name: text
        # key: s
        # name: sentence
        restricted_areas:
            tags:
                - img
                - a
            classes:
                - p--heading-

    # Identify item in the intervall tree
    element_identifier: entity

    # Filter items against an element attrbute of type x and
    # show items_per_unit per attribute ...what about multiple attributes
    
    # replaces:
    #         by_attribute:
    #             key: value
    #             value_per_unit: 1
    #             value_overall: 2


    # # Filter items by specific value of its attribute
    # filter_by_attribute:
    #     # strict: false   # check only one, true only valid if all match
    #     attributes:
    #         - key: type
    #           value: animal
    #         - key: score
    #           value: 10

    # Set mode / markup for replacement, default is html tag
    mode: tag # highlight


markup:

    # Markup for html-tags
    tag:
        tag: a
        # value_key not used anymore > use some logic for replace the original
        # with a value of the data > text replace with

        # Default attributes for tag markup.
        attributes:
            style:
                "color:blue;cursor:pointer;"
            class:
                anchorman

        # Exclude keys from the input to be rendered.
        exclude_keys:
            - score

    # Markup for highlighting context
    highlight:
        pre: '${{'
        post: '}}'

    # # Markup for coreference is still in TBD
    # coreferencer:
    #     value_key: text
    #     attribute: token
