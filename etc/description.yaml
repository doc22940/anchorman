settings:
    # settings / rules for the replacement process
    # item, link, element ..all reference to the same
    # concept in the following

    # # 1. return applied links too 
    # # see wich elements were applied into the text
    # return_applied_links: True
    
    # # 2. Set mode for replacement, default is html tag
    mode: tag # highlight

    # # 3. define the text structure
    # # p and html-paragraph is on per default and theses 
    # # options guide the input processing
    text_unit:
        items_per_unit: null # | 5
        key: p
        name: html-paragraph
        # key: t
        # name: text
        # key: s
        # name: sentence

        # param to exclude certain areas from anchormanning
        restricted_areas:
            tags:
                - img
                - a
            classes:
                - p--heading-

    # # 4. Identify item in the intervall tree ...what for?!
    element_identifier: entity

    # # 5. Replacement rules and filter

    # # 5.1 how many at all
    # # How many items will be marked at all in the text
    # # default all.
    replaces_at_all: null

    # # 5.2 case sensitive replacement
    # # Input term has to be exact match in text.
    case_sensitive: true

    # # 5.3 apply sorted items
    # # items will placed per default in order they 
    # # appear in the text, but if they should be added
    # # based on e.g. score, higher scored items first
    # sort_by_item_value:
    #     key: score
    #     default: 0

    # # 5.4 Filter items against an element attrbute of type x
    # # and show items_per_unit per attribute 
    # # ...what about multiple attributes?!
    # replaces:
    #         by_attribute:
    #             key: value
    #             value_per_unit: 1
    #             value_overall: 2

    # TBD: Filter items by specific value of its attribute
    # filter_by_attribute:
    #     # strict: false   # check only one, true only valid if all match
    #     attributes:
    #         - key: type
    #           value: animal
    #         - key: score
    #           value: 10


markup:

    # Markup for html-tags
    tag:
        tag: a
        # value_key not used anymore > use some logic for replace the original
        # with a value of the data > text replace with

        # Default attributes for tag markup, overwrite it!
        attributes:
            style:
                "color:blue;cursor:pointer;"
            class:
                anchorman

        # Exclude keys from the input to be rendered.
        exclude_keys:
            - score

    # Markup for highlighting context
    highlight:
        pre: '${{'
        post: '}}'
