# -*- coding: utf-8 -*-
#
# Anchorman documentation build configuration file, created by
# sphinx-quickstart on Wed Dec  9 23:04:59 2015.
#
# This file is execfile()d with the current directory set to its
# containing dir.
#
# Note that not all possible configuration values are present in this
# autogenerated file.
#
# All configuration values have a default; values that are commented out
# serve to show the default.

import sys
import os
# import shlex

# If extensions (or modules to document with autodoc) are in another directory,
# add these directories to sys.path here. If the directory is relative to the
# documentation root, use os.path.abspath to make it absolute, like shown here.
#sys.path.insert(0, os.path.abspath('.'))

# -- General configuration ------------------------------------------------
# Get the project root dir, which is the parent dir of this
cwd = os.getcwd()
project_root = os.path.dirname(cwd)
sys.path.append(project_root)

import anchorman
from anchorman.configuration import get_config

cfg = get_config()


try:
    # improve the pylint warnings
    report = open(project_root + '/docs/pylintreport.rst', 'r').read()
    content = report.split("Report")
    if "::" not in content[0]:
        starter = "\n::\n\n\t" + content[0].replace('\n', '\n\t') + "\n"
        content = "Report".join([starter] + content[1:])
        open(project_root + '/docs/pylintreport.rst', 'w').write(content)
except Exception, e:
    print "Need pylint if there is no such file."



# -- General configuration ------------------------------------------------

# If your documentation needs a minimal Sphinx version, state it here.
#needs_sphinx = '1.0'

# Add any Sphinx extension module names here, as strings. They can be
# extensions coming with Sphinx (named 'sphinx.ext.*') or your custom
# ones.
extensions = [
    # 'changelog',
    'sphinx.ext.autodoc',
    'sphinx.ext.doctest',
    'sphinx.ext.todo',
    'sphinx.ext.coverage',
    'sphinx.ext.pngmath',
    'sphinx.ext.viewcode',
    'sphinxcontrib.napoleon',
    'sphinx.ext.graphviz',
    ]

autosummary_generate = True



# # section names - optional
# changelog_sections = ["general", "rendering", "tests"]

# # tags to sort on inside of sections - also optional
# changelog_inner_tag_sort = ["feature", "bug"]

# how to render changelog links - these are plain
# python string templates, ticket/pullreq/changeset number goes
# in "%s"
# changelog_render_ticket = "https://github.com/rebeling/anchorman/issue/%s"
# changelog_render_pullreq = "http://bitbucket.org/myusername/myproject/pullrequest/%s"
# changelog_render_changeset = "http://bitbucket.org/myusername/myproject/changeset/%s"



# Add any paths that contain templates here, relative to this directory.
templates_path = ['_templates']

# The suffix(es) of source filenames.
# You can specify multiple suffix as a list of string:
# source_suffix = ['.rst', '.md']
source_suffix = '.rst'

# The encoding of source files.
#source_encoding = 'utf-8-sig'

# The master toctree document.
master_doc = 'index'

# General information about the project.
project = cfg['name']
copyright = cfg.get('copyright')
author = cfg['author']

# The version info for the project you're documenting, acts as replacement for
# |version| and |release|, also used in various other places throughout the
# built documents.
#
# The short X.Y version.
version = cfg['version']
# The full version, including alpha/beta/rc tags.
release = version

# The language for content autogenerated by Sphinx. Refer to documentation
# for a list of supported languages.
#
# This is also used if you do content translation via gettext catalogs.
# Usually you set "language" from the command line for these cases.
language = None

# There are two options for replacing |today|: either, you set today to some
# non-false value, then it is used:
#today = ''
# Else, today_fmt is used as the format for a strftime call.
#today_fmt = '%B %d, %Y'

# List of patterns, relative to source directory, that match files and
# directories to ignore when looking for source files.
exclude_patterns = ['_build']

# The reST default role (used for this markup: `text`) to use for all
# documents.
#default_role = None

# If true, '()' will be appended to :func: etc. cross-reference text.
#add_function_parentheses = True

# If true, the current module name will be prepended to all description
# unit titles (such as .. function::).
#add_module_names = True

# If true, sectionauthor and moduleauthor directives will be shown in the
# output. They are ignored by default.
#show_authors = False

# The name of the Pygments (syntax highlighting) style to use.
pygments_style = 'sphinx'

# A list of ignored prefixes for module index sorting.
#modindex_common_prefix = []

# If true, keep warnings as "system message" paragraphs in the built documents.
#keep_warnings = False

# If true, `todo` and `todoList` produce output, else they produce nothing.
todo_include_todos = True


# -- Options for HTML output ----------------------------------------------

# The theme to use for HTML and HTML Help pages.  See the documentation for
# a list of builtin themes.
html_theme = 'alabaster'


html_theme_options = {
    'logo': 'anchorman.png',
    'github_user': 'rebeling',
    'github_repo': 'anchorman',
    'travis_button': True,
    # 'github_banner': True
}

import alabaster

html_theme_path = [alabaster.get_path()]
extensions.append('alabaster')
html_theme = 'alabaster'
# html_sidebars = {
#     '**': [
#         'about.html', 'navigation.html', 'searchbox.html', 'donate.html',
#     ]
# }

html_sidebars = {
    'index':    ['sidebarintro.html', 'sourcelink.html', 'searchbox.html'],
    '**':       ['sidebarlogo.html', 'localtoc.html', 'relations.html',
                 'sourcelink.html', 'searchbox.html']
}



# Theme options are theme-specific and customize the look and feel of a theme
# further.  For a list of options available for each theme, see the
# documentation.
#html_theme_options = {}

html_theme_options = {

    # Set the lang attribute of the html tag. Defaults to 'en'
    # 'lang': 'en',
    # Disable showing the sidebar. Defaults to 'false'
    # 'nosidebar': False,
    # # Show header searchbox. Defaults to false. works only "nosidber=True",
    # 'header_searchbox': False,

    # # Put the sidebar on the right side. Defaults to false.
    # 'rightsidebar': False,
    # # Set the width of the sidebar. Defaults to 3
    # 'sidebar_span': 3,

    # # Fix navbar to top of screen. Defaults to true
    # 'nav_fixed_top': True,
    # # Fix the width of the sidebar. Defaults to false
    # 'nav_fixed': False,
    # # Set the width of the sidebar. Defaults to '900px'
    # 'nav_width': '900px',
    # # Fix the width of the content area. Defaults to false

    # 'content_fixed': False,
    # # Set the width of the content area. Defaults to '900px'
    # 'content_width': '900px',
    # # Fix the width of the row. Defaults to false
    # 'row_fixed': False,

    # # Disable the responsive design. Defaults to false
    # 'noresponsive': False,
    # # Disable the responsive footer relbar. Defaults to false
    # 'noresponsiverelbar': False,
    # # Disable flat design. Defaults to false.
    # # Works only "bootstrap_version = 3"
    # 'noflatdesign': False,

    # # Enable Google Web Font. Defaults to false
    # 'googlewebfont': True,
    # # Set the URL of Google Web Font's CSS.
    # # Defaults to 'http://fonts.googleapis.com/css?family=Text+Me+One'
    # 'googlewebfont_url': 'http://fonts.googleapis.com/css?family=Lily+Script+One',  # NOQA
    # Set the Style of Google Web Font's CSS.
    # Defaults to "font-family: 'Text Me One', sans-serif;"
    # 'googlewebfont_style': u"font-family: 'Lily Script One' cursive;",

    # # Set 'navbar-inverse' attribute to header navbar. Defaults to false.
    # 'header_inverse': False,
    # # Set 'navbar-inverse' attribute to relbar navbar. Defaults to false.
    # 'relbar_inverse': False,

    # # Enable inner theme by Bootswatch. Defaults to false
    # 'inner_theme': False,
    # # Set the name of innner theme. Defaults to 'bootswatch-simplex'
    # 'inner_theme_name': 'bootswatch-simplex',

    # # Select Twitter bootstrap version 2 or 3. Defaults to '3'
    # # 'bootstrap_version': '3',

    # # Show "theme preview" button in header navbar. Defaults to false.
    # 'theme_preview': True,

    # Set the Size of Heading text. Defaults to None
    # 'font': '3.0em',
    # 'h2_size': '2.6em',
    # 'h3_size': '2.2em',
    # 'h4_size': '1.8em',
    # 'h5_size': '1.4em',
    # 'h6_size': '1.1em',
}

# Add any paths that contain custom themes here, relative to this directory.
#html_theme_path = []

# The name for this set of Sphinx documents.  If None, it defaults to
# "<project> v<release> documentation".
#html_title = None

# A shorter title for the navigation bar.  Default is the same as html_title.
#html_short_title = None

# The name of an image file (relative to this directory) to place at the top
# of the sidebar.
#html_logo = None

# The name of an image file (within the static path) to use as favicon of the
# docs.  This file should be a Windows icon file (.ico) being 16x16 or 32x32
# pixels large.
#html_favicon = None

# Add any paths that contain custom static files (such as style sheets) here,
# relative to this directory. They are copied after the builtin static files,
# so a file named "default.css" will overwrite the builtin "default.css".
html_static_path = ['_static']

html_context = {
    'css_files': [
        '_static/theme_overrides.css',  # overrides for wide tables in RTD theme
        ],
    }

# Add any extra paths that contain custom files (such as robots.txt or
# .htaccess) here, relative to this directory. These files are copied
# directly to the root of the documentation.
#html_extra_path = []

# If not '', a 'Last updated on:' timestamp is inserted at every page bottom,
# using the given strftime format.
#html_last_updated_fmt = '%b %d, %Y'

# If true, SmartyPants will be used to convert quotes and dashes to
# typographically correct entities.
#html_use_smartypants = True

# Custom sidebar templates, maps document names to template names.
#html_sidebars = {}

# Additional templates that should be rendered to pages, maps page names to
# template names.
#html_additional_pages = {}

# If false, no module index is generated.
#html_domain_indices = True

# If false, no index is generated.
#html_use_index = True

# If true, the index is split into individual pages for each letter.
#html_split_index = False

# If true, links to the reST sources are added to the pages.
#html_show_sourcelink = True
# # If true, links to the reST sources are added to the pages.
html_show_sourcelink = False

# # If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
html_show_sphinx = False
# If true, "Created using Sphinx" is shown in the HTML footer. Default is True.
#html_show_sphinx = True

# If true, "(C) Copyright ..." is shown in the HTML footer. Default is True.
#html_show_copyright = True

# If true, an OpenSearch description file will be output, and all pages will
# contain a <link> tag referring to it.  The value of this option must be the
# base URL from which the finished HTML is served.
#html_use_opensearch = ''

# This is the file name suffix for HTML files (e.g. ".xhtml").
#html_file_suffix = None

# Language to be used for generating the HTML full-text search index.
# Sphinx supports the following languages:
#   'da', 'de', 'en', 'es', 'fi', 'fr', 'hu', 'it', 'ja'
#   'nl', 'no', 'pt', 'ro', 'ru', 'sv', 'tr'
#html_search_language = 'en'

# A dictionary with options for the search language support, empty by default.
# Now only 'ja' uses this config value
#html_search_options = {'type': 'default'}

# The name of a javascript file (relative to the configuration directory) that
# implements a search results scorer. If empty, the default will be used.
#html_search_scorer = 'scorer.js'

# Output file base name for HTML help builder.
htmlhelp_basename = 'Anchormandoc'

# -- Options for LaTeX output ---------------------------------------------

latex_elements = {
# The paper size ('letterpaper' or 'a4paper').
#'papersize': 'letterpaper',

# The font size ('10pt', '11pt' or '12pt').
#'pointsize': '10pt',

# Additional stuff for the LaTeX preamble.
#'preamble': '',

# Latex figure (float) alignment
#'figure_align': 'htbp',
}

# Grouping the document tree into LaTeX files. List of tuples
# (source start file, target name, title,
#  author, documentclass [howto, manual, or own class]).
latex_documents = [
  (master_doc, 'Anchorman.tex', u'Anchorman Documentation',
   u'Matthias Rebel', 'manual'),
]

# The name of an image file (relative to this directory) to place at the top of
# the title page.
#latex_logo = None

# For "manual" documents, if this is true, then toplevel headings are parts,
# not chapters.
#latex_use_parts = False

# If true, show page references after internal links.
#latex_show_pagerefs = False

# If true, show URL addresses after external links.
#latex_show_urls = False

# Documents to append as an appendix to all manuals.
#latex_appendices = []

# If false, no module index is generated.
#latex_domain_indices = True


# -- Options for manual page output ---------------------------------------

# One entry per manual page. List of tuples
# (source start file, name, description, authors, manual section).
man_pages = [
    (master_doc, 'anchorman', u'Anchorman Documentation',
     [author], 1)
]

# If true, show URL addresses after external links.
#man_show_urls = False


# -- Options for Texinfo output -------------------------------------------

# Grouping the document tree into Texinfo files. List of tuples
# (source start file, target name, title, author,
#  dir menu entry, description, category)
texinfo_documents = [
  (master_doc, 'Anchorman', u'Anchorman Documentation',
   author, 'Anchorman', 'One line description of project.',
   'Miscellaneous'),
]

# Documents to append as an appendix to all manuals.
#texinfo_appendices = []

# If false, no module index is generated.
#texinfo_domain_indices = True

# How to display URL addresses: 'footnote', 'no', or 'inline'.
#texinfo_show_urls = 'footnote'

# If true, do not generate a @detailmenu in the "Top" node's menu.
#texinfo_no_detailmenu = False
